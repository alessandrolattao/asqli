name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          check-latest: true
      
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
      
      - name: Test
        run: go test ./...
      
      - name: Build for multiple platforms
        run: |
          # Create build directory
          mkdir -p build
          
          # Build for Linux
          GOOS=linux GOARCH=amd64 go build -ldflags="-X main.Version=${{ env.VERSION }}" -o build/asqli-linux-amd64 ./cmd/asqli
          GOOS=linux GOARCH=arm64 go build -ldflags="-X main.Version=${{ env.VERSION }}" -o build/asqli-linux-arm64 ./cmd/asqli
          
          # Build for macOS
          GOOS=darwin GOARCH=amd64 go build -ldflags="-X main.Version=${{ env.VERSION }}" -o build/asqli-darwin-amd64 ./cmd/asqli
          GOOS=darwin GOARCH=arm64 go build -ldflags="-X main.Version=${{ env.VERSION }}" -o build/asqli-darwin-arm64 ./cmd/asqli
          
          # Build for Windows
          GOOS=windows GOARCH=amd64 go build -ldflags="-X main.Version=${{ env.VERSION }}" -o build/asqli-windows-amd64.exe ./cmd/asqli
      
      - name: Create release archives
        run: |
          cd build
          
          # Create zip archives for Windows
          zip asqli-windows-amd64-${{ env.VERSION }}.zip asqli-windows-amd64.exe
          
          # Create tar.gz archives for Linux and macOS
          tar -czf asqli-linux-amd64-${{ env.VERSION }}.tar.gz asqli-linux-amd64
          tar -czf asqli-linux-arm64-${{ env.VERSION }}.tar.gz asqli-linux-arm64
          tar -czf asqli-darwin-amd64-${{ env.VERSION }}.tar.gz asqli-darwin-amd64
          tar -czf asqli-darwin-arm64-${{ env.VERSION }}.tar.gz asqli-darwin-arm64
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: ASQLI v${{ env.VERSION }}
          draft: false
          prerelease: false
          files: |
            build/asqli-linux-amd64-${{ env.VERSION }}.tar.gz
            build/asqli-linux-arm64-${{ env.VERSION }}.tar.gz
            build/asqli-darwin-amd64-${{ env.VERSION }}.tar.gz
            build/asqli-darwin-arm64-${{ env.VERSION }}.tar.gz
            build/asqli-windows-amd64-${{ env.VERSION }}.zip
          body: |
            # ASQLI v${{ env.VERSION }}

            ## Installation

            ### Linux (x86_64)
            ```
            tar -xzf asqli-linux-amd64-${{ env.VERSION }}.tar.gz
            ./asqli-linux-amd64
            ```

            ### Linux (ARM64)
            ```
            tar -xzf asqli-linux-arm64-${{ env.VERSION }}.tar.gz
            ./asqli-linux-arm64
            ```

            ### macOS (Intel)
            ```
            tar -xzf asqli-darwin-amd64-${{ env.VERSION }}.tar.gz
            ./asqli-darwin-amd64
            ```

            ### macOS (Apple Silicon)
            ```
            tar -xzf asqli-darwin-arm64-${{ env.VERSION }}.tar.gz
            ./asqli-darwin-arm64
            ```

            ### Windows
            ```
            # Extract the zip file and run asqli-windows-amd64.exe
            ```